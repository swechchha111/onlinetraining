class MyLinkedList {
public:
    class Node {
public:
    int val;
    Node* next;
    Node(int val) {
        this->val=val;
        next=NULL;
    }
};
    MyLinkedList() {
        
    }
    Node* head=new Node(1);
    int size=0;
    
    int get(int index) {
        if(index>=size)return -1;
        Node* temp=head->next;
        for(int i=0;i<index;i++)
            temp=temp->next;
        return temp->val;
    }
    
    void addAtHead(int val) {
        Node* newnode= new Node(val);
        newnode->next=head->next;
        head->next=newnode;
        size++;
        
    }
    
    void addAtTail(int val) {
        Node* temp=head;
        while(temp->next!=NULL)
            temp=temp->next;
       Node* newnode=new Node(val);
         temp->next=newnode;
        size++;
        
    }
    
    void addAtIndex(int index, int val) {
        if(index>size) return;
        Node* temp=head;
        Node* newnode=new Node(val);
        //if(index>size)return -1;
        if(index==0)
        {
            newnode->next=head->next;
            head->next=newnode;
        }
        else
        {
            for(int i=0;i<index;i++)
                temp=temp->next;
        
        Node* temp1=temp->next;
         temp->next=newnode;
        newnode->next=temp1;
        }
        size++;
        
    }
    
//      Node* temp=head;
//         for(int i=0;i<index;i++) temp=temp->next;
        
//         temp->next=new Node(val);
//         temp->next->next=temp1;
//         size++;
    
    
    
    
    
    
    
    void deleteAtIndex(int index) {
        if(index>=size)return;
    Node *temp =head;
        if(index==0)
        {
            head->next=head->next->next;
        }
        else
        {
            for(int i=0;i<index;i++)
                temp=temp->next;
        
        temp->next=temp->next->next;}
        size--;
    }
};

/**
 * Your MyLinkedList object will be instantiated and called as such:
 * MyLinkedList* obj = new MyLinkedList();
 * int param_1 = obj->get(index);
 * obj->addAtHead(val);
 * obj->addAtTail(val);
 * obj->addAtIndex(index,val);
 * obj->deleteAtIndex(index);
 */
