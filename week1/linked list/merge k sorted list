/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        priority_queue  <pair <int, ListNode*>, vector <pair<int, ListNode*>>, greater<pair<int, ListNode*>>> pq;
        for(auto it: lists)
        {if(it!=NULL)
            {pq.push({it->val, it});}}
        ListNode* dummy=new ListNode(-1);
        ListNode* temp=dummy;
        while(pq.size()!=0)
        {  
            auto u=pq.top();
            pq.pop();
            if(pq.size()==0)
            {
                temp->next=u.second;
                break;
            }
            ListNode* curr=u.second;
            temp->next=curr;
            temp=temp->next;
            ListNode *uu=curr->next;
            curr->next=NULL;
            if(uu)
            {
                pq.push({uu->val,uu});
                
            }
            
            
        }
        return dummy->next;
        
    }
};
